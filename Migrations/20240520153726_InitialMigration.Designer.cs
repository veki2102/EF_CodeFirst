// <auto-generated />
using System;
using EF_CodeFirst.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_CodeFirst.Migrations
{
    [DbContext(typeof(StudentContext))]
    [Migration("20240520153726_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_CodeFirst.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grade");

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            GradeName = "Programsko inženjerstvo",
                            Section = "Računarstvo",
                            StudentId = 1
                        },
                        new
                        {
                            GradeId = 2,
                            GradeName = "Sistemsko inženjerstvo",
                            Section = "Računarstvo",
                            StudentId = 1
                        },
                        new
                        {
                            GradeId = 3,
                            GradeName = "Računalno inženjerstvo",
                            Section = "Računarstvo",
                            StudentId = 1
                        },
                        new
                        {
                            GradeId = 4,
                            GradeName = "Automatika i robotika",
                            Section = "Informacijska i komunikacijska tehnologija",
                            StudentId = 3
                        },
                        new
                        {
                            GradeId = 5,
                            GradeName = "Komunikacijske i svemirske tehnologije",
                            Section = "Informacijska i komunikacijska tehnologija",
                            StudentId = 3
                        },
                        new
                        {
                            GradeId = 6,
                            GradeName = "Elektroenergetika",
                            Section = "Elektrotehnika",
                            StudentId = 2
                        },
                        new
                        {
                            GradeId = 7,
                            GradeName = "Elektronika",
                            Section = "Elektrotehnika",
                            StudentId = 2
                        });
                });

            modelBuilder.Entity("EF_CodeFirst.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("StudentID");

                    b.ToTable("Student");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            DateOfBirth = new DateTime(2003, 2, 20, 20, 53, 19, 238, DateTimeKind.Unspecified),
                            Height = 180m,
                            StudentName = "Pero",
                            Weight = 80.0
                        },
                        new
                        {
                            StudentID = 2,
                            DateOfBirth = new DateTime(2002, 7, 15, 20, 53, 19, 238, DateTimeKind.Unspecified),
                            Height = 178m,
                            StudentName = "Ivan",
                            Weight = 75.0
                        },
                        new
                        {
                            StudentID = 3,
                            DateOfBirth = new DateTime(2002, 7, 21, 20, 53, 19, 238, DateTimeKind.Unspecified),
                            Height = 168m,
                            StudentName = "Nikolina",
                            Weight = 65.0
                        });
                });

            modelBuilder.Entity("EF_CodeFirst.Models.Grade", b =>
                {
                    b.HasOne("EF_CodeFirst.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
